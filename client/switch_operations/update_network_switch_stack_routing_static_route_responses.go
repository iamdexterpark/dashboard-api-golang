// Code generated by go-swagger; DO NOT EDIT.

package switch_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateNetworkSwitchStackRoutingStaticRouteReader is a Reader for the UpdateNetworkSwitchStackRoutingStaticRoute structure.
type UpdateNetworkSwitchStackRoutingStaticRouteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkSwitchStackRoutingStaticRouteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkSwitchStackRoutingStaticRouteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNetworkSwitchStackRoutingStaticRouteOK creates a UpdateNetworkSwitchStackRoutingStaticRouteOK with default headers values
func NewUpdateNetworkSwitchStackRoutingStaticRouteOK() *UpdateNetworkSwitchStackRoutingStaticRouteOK {
	return &UpdateNetworkSwitchStackRoutingStaticRouteOK{}
}

/* UpdateNetworkSwitchStackRoutingStaticRouteOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateNetworkSwitchStackRoutingStaticRouteOK struct {
	Payload interface{}
}

func (o *UpdateNetworkSwitchStackRoutingStaticRouteOK) Error() string {
	return fmt.Sprintf("[PUT /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}][%d] updateNetworkSwitchStackRoutingStaticRouteOK  %+v", 200, o.Payload)
}
func (o *UpdateNetworkSwitchStackRoutingStaticRouteOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateNetworkSwitchStackRoutingStaticRouteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateNetworkSwitchStackRoutingStaticRouteBody update network switch stack routing static route body
// Example: {"advertiseViaOspfEnabled":false,"name":"My route","nextHopIp":"1.2.3.4","preferOverOspfRoutesEnabled":false,"subnet":"192.168.1.0/24"}
swagger:model UpdateNetworkSwitchStackRoutingStaticRouteBody
*/
type UpdateNetworkSwitchStackRoutingStaticRouteBody struct {

	// Option to advertise static route via OSPF
	AdvertiseViaOspfEnabled bool `json:"advertiseViaOspfEnabled,omitempty"`

	// Name or description for layer 3 static route
	Name string `json:"name,omitempty"`

	// IP address of the next hop device to which the device sends its traffic for the subnet
	NextHopIP string `json:"nextHopIp,omitempty"`

	// Option to prefer static route over OSPF routes
	PreferOverOspfRoutesEnabled bool `json:"preferOverOspfRoutesEnabled,omitempty"`

	// The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)
	Subnet string `json:"subnet,omitempty"`
}

// Validate validates this update network switch stack routing static route body
func (o *UpdateNetworkSwitchStackRoutingStaticRouteBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update network switch stack routing static route body based on context it is used
func (o *UpdateNetworkSwitchStackRoutingStaticRouteBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateNetworkSwitchStackRoutingStaticRouteBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateNetworkSwitchStackRoutingStaticRouteBody) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkSwitchStackRoutingStaticRouteBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
