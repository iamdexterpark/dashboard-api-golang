// Code generated by go-swagger; DO NOT EDIT.

package camera

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateNetworkCameraQualityRetentionProfileReader is a Reader for the CreateNetworkCameraQualityRetentionProfile structure.
type CreateNetworkCameraQualityRetentionProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNetworkCameraQualityRetentionProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateNetworkCameraQualityRetentionProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateNetworkCameraQualityRetentionProfileOK creates a CreateNetworkCameraQualityRetentionProfileOK with default headers values
func NewCreateNetworkCameraQualityRetentionProfileOK() *CreateNetworkCameraQualityRetentionProfileOK {
	return &CreateNetworkCameraQualityRetentionProfileOK{}
}

/* CreateNetworkCameraQualityRetentionProfileOK describes a response with status code 200, with default header values.

Successful operation
*/
type CreateNetworkCameraQualityRetentionProfileOK struct {
	Payload interface{}
}

func (o *CreateNetworkCameraQualityRetentionProfileOK) Error() string {
	return fmt.Sprintf("[POST /networks/{networkId}/camera/qualityRetentionProfiles][%d] createNetworkCameraQualityRetentionProfileOK  %+v", 200, o.Payload)
}
func (o *CreateNetworkCameraQualityRetentionProfileOK) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateNetworkCameraQualityRetentionProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateNetworkCameraQualityRetentionProfileBody create network camera quality retention profile body
// Example: {"name":"Sample quality retention profile"}
swagger:model CreateNetworkCameraQualityRetentionProfileBody
*/
type CreateNetworkCameraQualityRetentionProfileBody struct {

	// Whether or not to record audio. Can be either true or false. Defaults to false.
	AudioRecordingEnabled bool `json:"audioRecordingEnabled,omitempty"`

	// Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
	CloudArchiveEnabled bool `json:"cloudArchiveEnabled,omitempty"`

	// The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days.
	MaxRetentionDays int64 `json:"maxRetentionDays,omitempty"`

	// Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
	MotionBasedRetentionEnabled bool `json:"motionBasedRetentionEnabled,omitempty"`

	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion int64 `json:"motionDetectorVersion,omitempty"`

	// The name of the new profile. Must be unique. This parameter is required.
	// Required: true
	Name *string `json:"name"`

	// Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled bool `json:"restrictedBandwidthModeEnabled,omitempty"`

	// Schedule for which this camera will record video, or 'null' to always record.
	ScheduleID string `json:"scheduleId,omitempty"`

	// video settings
	VideoSettings *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings `json:"videoSettings,omitempty"`
}

// Validate validates this create network camera quality retention profile body
func (o *CreateNetworkCameraQualityRetentionProfileBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVideoSettings(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileBody) validateVideoSettings(formats strfmt.Registry) error {
	if swag.IsZero(o.VideoSettings) { // not required
		return nil
	}

	if o.VideoSettings != nil {
		if err := o.VideoSettings.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create network camera quality retention profile body based on the context it is used
func (o *CreateNetworkCameraQualityRetentionProfileBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateVideoSettings(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileBody) contextValidateVideoSettings(ctx context.Context, formats strfmt.Registry) error {

	if o.VideoSettings != nil {
		if err := o.VideoSettings.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileBody) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings Video quality and resolution settings for all the camera models.
swagger:model CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings
*/
type CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings struct {

	// m v12 m v22 m v72
	MV12MV22MV72 *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72 `json:"MV12/MV22/MV72,omitempty"`

	// m v12 w e
	MV12WE *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE `json:"MV12WE,omitempty"`

	// m v21 m v71
	MV21MV71 *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71 `json:"MV21/MV71,omitempty"`

	// m v22 x m v72 x
	MV22XMV72X *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X `json:"MV22X/MV72X,omitempty"`

	// m v32
	MV32 *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32 `json:"MV32,omitempty"`

	// m v52
	MV52 *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52 `json:"MV52,omitempty"`
}

// Validate validates this create network camera quality retention profile params body video settings
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMV12MV22MV72(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMV12WE(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMV21MV71(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMV22XMV72X(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMV32(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMV52(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) validateMV12MV22MV72(formats strfmt.Registry) error {
	if swag.IsZero(o.MV12MV22MV72) { // not required
		return nil
	}

	if o.MV12MV22MV72 != nil {
		if err := o.MV12MV22MV72.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12/MV22/MV72")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12/MV22/MV72")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) validateMV12WE(formats strfmt.Registry) error {
	if swag.IsZero(o.MV12WE) { // not required
		return nil
	}

	if o.MV12WE != nil {
		if err := o.MV12WE.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12WE")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12WE")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) validateMV21MV71(formats strfmt.Registry) error {
	if swag.IsZero(o.MV21MV71) { // not required
		return nil
	}

	if o.MV21MV71 != nil {
		if err := o.MV21MV71.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV21/MV71")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV21/MV71")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) validateMV22XMV72X(formats strfmt.Registry) error {
	if swag.IsZero(o.MV22XMV72X) { // not required
		return nil
	}

	if o.MV22XMV72X != nil {
		if err := o.MV22XMV72X.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV22X/MV72X")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV22X/MV72X")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) validateMV32(formats strfmt.Registry) error {
	if swag.IsZero(o.MV32) { // not required
		return nil
	}

	if o.MV32 != nil {
		if err := o.MV32.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV32")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV32")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) validateMV52(formats strfmt.Registry) error {
	if swag.IsZero(o.MV52) { // not required
		return nil
	}

	if o.MV52 != nil {
		if err := o.MV52.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV52")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV52")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create network camera quality retention profile params body video settings based on the context it is used
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMV12MV22MV72(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMV12WE(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMV21MV71(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMV22XMV72X(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMV32(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateMV52(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) contextValidateMV12MV22MV72(ctx context.Context, formats strfmt.Registry) error {

	if o.MV12MV22MV72 != nil {
		if err := o.MV12MV22MV72.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12/MV22/MV72")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12/MV22/MV72")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) contextValidateMV12WE(ctx context.Context, formats strfmt.Registry) error {

	if o.MV12WE != nil {
		if err := o.MV12WE.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12WE")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV12WE")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) contextValidateMV21MV71(ctx context.Context, formats strfmt.Registry) error {

	if o.MV21MV71 != nil {
		if err := o.MV21MV71.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV21/MV71")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV21/MV71")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) contextValidateMV22XMV72X(ctx context.Context, formats strfmt.Registry) error {

	if o.MV22XMV72X != nil {
		if err := o.MV22XMV72X.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV22X/MV72X")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV22X/MV72X")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) contextValidateMV32(ctx context.Context, formats strfmt.Registry) error {

	if o.MV32 != nil {
		if err := o.MV32.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV32")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV32")
			}
			return err
		}
	}

	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) contextValidateMV52(ctx context.Context, formats strfmt.Registry) error {

	if o.MV52 != nil {
		if err := o.MV52.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV52")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createNetworkCameraQualityRetentionProfile" + "." + "videoSettings" + "." + "MV52")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72 Quality and resolution for MV12/MV22/MV72 camera models.
swagger:model CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72
*/
type CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72 struct {

	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	// Required: true
	// Enum: [Standard Enhanced High]
	Quality *string `json:"quality"`

	// Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
	// Required: true
	// Enum: [1280x720 1920x1080]
	Resolution *string `json:"resolution"`
}

// Validate validates this create network camera quality retention profile params body video settings m v12 m v22 m v72
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResolution(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeQualityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard","Enhanced","High"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeQualityPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeQualityPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72QualityStandard captures enum value "Standard"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72QualityStandard string = "Standard"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72QualityEnhanced captures enum value "Enhanced"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72QualityEnhanced string = "Enhanced"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72QualityHigh captures enum value "High"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72QualityHigh string = "High"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) validateQualityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeQualityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) validateQuality(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12/MV22/MV72"+"."+"quality", "body", o.Quality); err != nil {
		return err
	}

	// value enum
	if err := o.validateQualityEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12/MV22/MV72"+"."+"quality", "body", *o.Quality); err != nil {
		return err
	}

	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeResolutionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1280x720","1920x1080"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeResolutionPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeResolutionPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72ResolutionNr1280x720 captures enum value "1280x720"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72ResolutionNr1280x720 string = "1280x720"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72ResolutionNr1920x1080 captures enum value "1920x1080"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72ResolutionNr1920x1080 string = "1920x1080"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) validateResolutionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72TypeResolutionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) validateResolution(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12/MV22/MV72"+"."+"resolution", "body", o.Resolution); err != nil {
		return err
	}

	// value enum
	if err := o.validateResolutionEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12/MV22/MV72"+"."+"resolution", "body", *o.Resolution); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create network camera quality retention profile params body video settings m v12 m v22 m v72 based on context it is used
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12MV22MV72
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE Quality and resolution for MV12WE camera models.
swagger:model CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE
*/
type CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE struct {

	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	// Required: true
	// Enum: [Standard Enhanced High]
	Quality *string `json:"quality"`

	// Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
	// Required: true
	// Enum: [1280x720 1920x1080]
	Resolution *string `json:"resolution"`
}

// Validate validates this create network camera quality retention profile params body video settings m v12 w e
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResolution(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeQualityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard","Enhanced","High"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeQualityPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeQualityPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEQualityStandard captures enum value "Standard"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEQualityStandard string = "Standard"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEQualityEnhanced captures enum value "Enhanced"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEQualityEnhanced string = "Enhanced"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEQualityHigh captures enum value "High"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEQualityHigh string = "High"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) validateQualityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeQualityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) validateQuality(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12WE"+"."+"quality", "body", o.Quality); err != nil {
		return err
	}

	// value enum
	if err := o.validateQualityEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12WE"+"."+"quality", "body", *o.Quality); err != nil {
		return err
	}

	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeResolutionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1280x720","1920x1080"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeResolutionPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeResolutionPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEResolutionNr1280x720 captures enum value "1280x720"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEResolutionNr1280x720 string = "1280x720"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEResolutionNr1920x1080 captures enum value "1920x1080"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WEResolutionNr1920x1080 string = "1920x1080"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) validateResolutionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WETypeResolutionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) validateResolution(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12WE"+"."+"resolution", "body", o.Resolution); err != nil {
		return err
	}

	// value enum
	if err := o.validateResolutionEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV12WE"+"."+"resolution", "body", *o.Resolution); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create network camera quality retention profile params body video settings m v12 w e based on context it is used
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV12WE
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71 Quality and resolution for MV21/MV71 camera models.
swagger:model CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71
*/
type CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71 struct {

	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	// Required: true
	// Enum: [Standard Enhanced High]
	Quality *string `json:"quality"`

	// Resolution of the camera. Can be one of '1280x720'.
	// Required: true
	// Enum: [1280x720]
	Resolution *string `json:"resolution"`
}

// Validate validates this create network camera quality retention profile params body video settings m v21 m v71
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResolution(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeQualityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard","Enhanced","High"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeQualityPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeQualityPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71QualityStandard captures enum value "Standard"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71QualityStandard string = "Standard"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71QualityEnhanced captures enum value "Enhanced"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71QualityEnhanced string = "Enhanced"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71QualityHigh captures enum value "High"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71QualityHigh string = "High"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) validateQualityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeQualityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) validateQuality(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV21/MV71"+"."+"quality", "body", o.Quality); err != nil {
		return err
	}

	// value enum
	if err := o.validateQualityEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV21/MV71"+"."+"quality", "body", *o.Quality); err != nil {
		return err
	}

	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeResolutionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1280x720"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeResolutionPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeResolutionPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71ResolutionNr1280x720 captures enum value "1280x720"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71ResolutionNr1280x720 string = "1280x720"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) validateResolutionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71TypeResolutionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) validateResolution(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV21/MV71"+"."+"resolution", "body", o.Resolution); err != nil {
		return err
	}

	// value enum
	if err := o.validateResolutionEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV21/MV71"+"."+"resolution", "body", *o.Resolution); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create network camera quality retention profile params body video settings m v21 m v71 based on context it is used
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV21MV71
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X Quality and resolution for MV22X/MV72X camera models.
swagger:model CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X
*/
type CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X struct {

	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	// Required: true
	// Enum: [Standard Enhanced High]
	Quality *string `json:"quality"`

	// Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.
	// Required: true
	// Enum: [1280x720 1920x1080 2688x1512]
	Resolution *string `json:"resolution"`
}

// Validate validates this create network camera quality retention profile params body video settings m v22 x m v72 x
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResolution(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeQualityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard","Enhanced","High"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeQualityPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeQualityPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XQualityStandard captures enum value "Standard"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XQualityStandard string = "Standard"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XQualityEnhanced captures enum value "Enhanced"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XQualityEnhanced string = "Enhanced"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XQualityHigh captures enum value "High"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XQualityHigh string = "High"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) validateQualityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeQualityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) validateQuality(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV22X/MV72X"+"."+"quality", "body", o.Quality); err != nil {
		return err
	}

	// value enum
	if err := o.validateQualityEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV22X/MV72X"+"."+"quality", "body", *o.Quality); err != nil {
		return err
	}

	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeResolutionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1280x720","1920x1080","2688x1512"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeResolutionPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeResolutionPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XResolutionNr1280x720 captures enum value "1280x720"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XResolutionNr1280x720 string = "1280x720"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XResolutionNr1920x1080 captures enum value "1920x1080"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XResolutionNr1920x1080 string = "1920x1080"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XResolutionNr2688x1512 captures enum value "2688x1512"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XResolutionNr2688x1512 string = "2688x1512"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) validateResolutionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72XTypeResolutionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) validateResolution(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV22X/MV72X"+"."+"resolution", "body", o.Resolution); err != nil {
		return err
	}

	// value enum
	if err := o.validateResolutionEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV22X/MV72X"+"."+"resolution", "body", *o.Resolution); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create network camera quality retention profile params body video settings m v22 x m v72 x based on context it is used
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV22XMV72X
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32 Quality and resolution for MV32 camera models.
swagger:model CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32
*/
type CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32 struct {

	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	// Required: true
	// Enum: [Standard Enhanced High]
	Quality *string `json:"quality"`

	// Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
	// Required: true
	// Enum: [1080x1080 2058x2058]
	Resolution *string `json:"resolution"`
}

// Validate validates this create network camera quality retention profile params body video settings m v32
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResolution(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeQualityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard","Enhanced","High"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeQualityPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeQualityPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32QualityStandard captures enum value "Standard"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32QualityStandard string = "Standard"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32QualityEnhanced captures enum value "Enhanced"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32QualityEnhanced string = "Enhanced"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32QualityHigh captures enum value "High"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32QualityHigh string = "High"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) validateQualityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeQualityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) validateQuality(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV32"+"."+"quality", "body", o.Quality); err != nil {
		return err
	}

	// value enum
	if err := o.validateQualityEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV32"+"."+"quality", "body", *o.Quality); err != nil {
		return err
	}

	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeResolutionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1080x1080","2058x2058"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeResolutionPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeResolutionPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32ResolutionNr1080x1080 captures enum value "1080x1080"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32ResolutionNr1080x1080 string = "1080x1080"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32ResolutionNr2058x2058 captures enum value "2058x2058"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32ResolutionNr2058x2058 string = "2058x2058"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) validateResolutionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32TypeResolutionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) validateResolution(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV32"+"."+"resolution", "body", o.Resolution); err != nil {
		return err
	}

	// value enum
	if err := o.validateResolutionEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV32"+"."+"resolution", "body", *o.Resolution); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create network camera quality retention profile params body video settings m v32 based on context it is used
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV32
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52 Quality and resolution for MV52 camera models.
swagger:model CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52
*/
type CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52 struct {

	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	// Required: true
	// Enum: [Standard Enhanced High]
	Quality *string `json:"quality"`

	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '2688x1512' or '3840x2160'.
	// Required: true
	// Enum: [1280x720 1920x1080 2688x1512 3840x2160]
	Resolution *string `json:"resolution"`
}

// Validate validates this create network camera quality retention profile params body video settings m v52
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQuality(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateResolution(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeQualityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard","Enhanced","High"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeQualityPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeQualityPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52QualityStandard captures enum value "Standard"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52QualityStandard string = "Standard"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52QualityEnhanced captures enum value "Enhanced"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52QualityEnhanced string = "Enhanced"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52QualityHigh captures enum value "High"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52QualityHigh string = "High"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) validateQualityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeQualityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) validateQuality(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV52"+"."+"quality", "body", o.Quality); err != nil {
		return err
	}

	// value enum
	if err := o.validateQualityEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV52"+"."+"quality", "body", *o.Quality); err != nil {
		return err
	}

	return nil
}

var createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeResolutionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["1280x720","1920x1080","2688x1512","3840x2160"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeResolutionPropEnum = append(createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeResolutionPropEnum, v)
	}
}

const (

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr1280x720 captures enum value "1280x720"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr1280x720 string = "1280x720"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr1920x1080 captures enum value "1920x1080"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr1920x1080 string = "1920x1080"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr2688x1512 captures enum value "2688x1512"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr2688x1512 string = "2688x1512"

	// CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr3840x2160 captures enum value "3840x2160"
	CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52ResolutionNr3840x2160 string = "3840x2160"
)

// prop value enum
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) validateResolutionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52TypeResolutionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) validateResolution(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV52"+"."+"resolution", "body", o.Resolution); err != nil {
		return err
	}

	// value enum
	if err := o.validateResolutionEnum("createNetworkCameraQualityRetentionProfile"+"."+"videoSettings"+"."+"MV52"+"."+"resolution", "body", *o.Resolution); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create network camera quality retention profile params body video settings m v52 based on context it is used
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52) UnmarshalBinary(b []byte) error {
	var res CreateNetworkCameraQualityRetentionProfileParamsBodyVideoSettingsMV52
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
