// Code generated by go-swagger; DO NOT EDIT.

package camera

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUpdateNetworkCameraQualityRetentionProfileParams creates a new UpdateNetworkCameraQualityRetentionProfileParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateNetworkCameraQualityRetentionProfileParams() *UpdateNetworkCameraQualityRetentionProfileParams {
	return &UpdateNetworkCameraQualityRetentionProfileParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateNetworkCameraQualityRetentionProfileParamsWithTimeout creates a new UpdateNetworkCameraQualityRetentionProfileParams object
// with the ability to set a timeout on a request.
func NewUpdateNetworkCameraQualityRetentionProfileParamsWithTimeout(timeout time.Duration) *UpdateNetworkCameraQualityRetentionProfileParams {
	return &UpdateNetworkCameraQualityRetentionProfileParams{
		timeout: timeout,
	}
}

// NewUpdateNetworkCameraQualityRetentionProfileParamsWithContext creates a new UpdateNetworkCameraQualityRetentionProfileParams object
// with the ability to set a context for a request.
func NewUpdateNetworkCameraQualityRetentionProfileParamsWithContext(ctx context.Context) *UpdateNetworkCameraQualityRetentionProfileParams {
	return &UpdateNetworkCameraQualityRetentionProfileParams{
		Context: ctx,
	}
}

// NewUpdateNetworkCameraQualityRetentionProfileParamsWithHTTPClient creates a new UpdateNetworkCameraQualityRetentionProfileParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateNetworkCameraQualityRetentionProfileParamsWithHTTPClient(client *http.Client) *UpdateNetworkCameraQualityRetentionProfileParams {
	return &UpdateNetworkCameraQualityRetentionProfileParams{
		HTTPClient: client,
	}
}

/* UpdateNetworkCameraQualityRetentionProfileParams contains all the parameters to send to the API endpoint
   for the update network camera quality retention profile operation.

   Typically these are written to a http.Request.
*/
type UpdateNetworkCameraQualityRetentionProfileParams struct {

	// NetworkID.
	NetworkID string

	// QualityRetentionProfileID.
	QualityRetentionProfileID string

	// UpdateNetworkCameraQualityRetentionProfile.
	UpdateNetworkCameraQualityRetentionProfile UpdateNetworkCameraQualityRetentionProfileBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update network camera quality retention profile params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WithDefaults() *UpdateNetworkCameraQualityRetentionProfileParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update network camera quality retention profile params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateNetworkCameraQualityRetentionProfileParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WithTimeout(timeout time.Duration) *UpdateNetworkCameraQualityRetentionProfileParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WithContext(ctx context.Context) *UpdateNetworkCameraQualityRetentionProfileParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WithHTTPClient(client *http.Client) *UpdateNetworkCameraQualityRetentionProfileParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNetworkID adds the networkID to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WithNetworkID(networkID string) *UpdateNetworkCameraQualityRetentionProfileParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WithQualityRetentionProfileID adds the qualityRetentionProfileID to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WithQualityRetentionProfileID(qualityRetentionProfileID string) *UpdateNetworkCameraQualityRetentionProfileParams {
	o.SetQualityRetentionProfileID(qualityRetentionProfileID)
	return o
}

// SetQualityRetentionProfileID adds the qualityRetentionProfileId to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) SetQualityRetentionProfileID(qualityRetentionProfileID string) {
	o.QualityRetentionProfileID = qualityRetentionProfileID
}

// WithUpdateNetworkCameraQualityRetentionProfile adds the updateNetworkCameraQualityRetentionProfile to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WithUpdateNetworkCameraQualityRetentionProfile(updateNetworkCameraQualityRetentionProfile UpdateNetworkCameraQualityRetentionProfileBody) *UpdateNetworkCameraQualityRetentionProfileParams {
	o.SetUpdateNetworkCameraQualityRetentionProfile(updateNetworkCameraQualityRetentionProfile)
	return o
}

// SetUpdateNetworkCameraQualityRetentionProfile adds the updateNetworkCameraQualityRetentionProfile to the update network camera quality retention profile params
func (o *UpdateNetworkCameraQualityRetentionProfileParams) SetUpdateNetworkCameraQualityRetentionProfile(updateNetworkCameraQualityRetentionProfile UpdateNetworkCameraQualityRetentionProfileBody) {
	o.UpdateNetworkCameraQualityRetentionProfile = updateNetworkCameraQualityRetentionProfile
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateNetworkCameraQualityRetentionProfileParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	// path param qualityRetentionProfileId
	if err := r.SetPathParam("qualityRetentionProfileId", o.QualityRetentionProfileID); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.UpdateNetworkCameraQualityRetentionProfile); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
