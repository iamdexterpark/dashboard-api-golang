// Code generated by go-swagger; DO NOT EDIT.

package camera

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateDeviceCameraWirelessProfilesReader is a Reader for the UpdateDeviceCameraWirelessProfiles structure.
type UpdateDeviceCameraWirelessProfilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDeviceCameraWirelessProfilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDeviceCameraWirelessProfilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateDeviceCameraWirelessProfilesOK creates a UpdateDeviceCameraWirelessProfilesOK with default headers values
func NewUpdateDeviceCameraWirelessProfilesOK() *UpdateDeviceCameraWirelessProfilesOK {
	return &UpdateDeviceCameraWirelessProfilesOK{}
}

/* UpdateDeviceCameraWirelessProfilesOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateDeviceCameraWirelessProfilesOK struct {
	Payload interface{}
}

func (o *UpdateDeviceCameraWirelessProfilesOK) Error() string {
	return fmt.Sprintf("[PUT /devices/{serial}/camera/wirelessProfiles][%d] updateDeviceCameraWirelessProfilesOK  %+v", 200, o.Payload)
}
func (o *UpdateDeviceCameraWirelessProfilesOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateDeviceCameraWirelessProfilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateDeviceCameraWirelessProfilesBody update device camera wireless profiles body
// Example: {"ids":{"backup":"1","primary":"3","secondary":"2"}}
swagger:model UpdateDeviceCameraWirelessProfilesBody
*/
type UpdateDeviceCameraWirelessProfilesBody struct {

	// ids
	// Required: true
	Ids *UpdateDeviceCameraWirelessProfilesParamsBodyIds `json:"ids"`
}

// Validate validates this update device camera wireless profiles body
func (o *UpdateDeviceCameraWirelessProfilesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateDeviceCameraWirelessProfilesBody) validateIds(formats strfmt.Registry) error {

	if err := validate.Required("updateDeviceCameraWirelessProfiles"+"."+"ids", "body", o.Ids); err != nil {
		return err
	}

	if o.Ids != nil {
		if err := o.Ids.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateDeviceCameraWirelessProfiles" + "." + "ids")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updateDeviceCameraWirelessProfiles" + "." + "ids")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this update device camera wireless profiles body based on the context it is used
func (o *UpdateDeviceCameraWirelessProfilesBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateIds(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateDeviceCameraWirelessProfilesBody) contextValidateIds(ctx context.Context, formats strfmt.Registry) error {

	if o.Ids != nil {
		if err := o.Ids.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateDeviceCameraWirelessProfiles" + "." + "ids")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updateDeviceCameraWirelessProfiles" + "." + "ids")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateDeviceCameraWirelessProfilesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateDeviceCameraWirelessProfilesBody) UnmarshalBinary(b []byte) error {
	var res UpdateDeviceCameraWirelessProfilesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateDeviceCameraWirelessProfilesParamsBodyIds The ids of the wireless profile to assign to the given camera
swagger:model UpdateDeviceCameraWirelessProfilesParamsBodyIds
*/
type UpdateDeviceCameraWirelessProfilesParamsBodyIds struct {

	// The id of the backup wireless profile
	Backup string `json:"backup,omitempty"`

	// The id of the primary wireless profile
	Primary string `json:"primary,omitempty"`

	// The id of the secondary wireless profile
	Secondary string `json:"secondary,omitempty"`
}

// Validate validates this update device camera wireless profiles params body ids
func (o *UpdateDeviceCameraWirelessProfilesParamsBodyIds) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update device camera wireless profiles params body ids based on context it is used
func (o *UpdateDeviceCameraWirelessProfilesParamsBodyIds) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateDeviceCameraWirelessProfilesParamsBodyIds) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateDeviceCameraWirelessProfilesParamsBodyIds) UnmarshalBinary(b []byte) error {
	var res UpdateDeviceCameraWirelessProfilesParamsBodyIds
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
