// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUpdateOrganizationSamlIdpParams creates a new UpdateOrganizationSamlIdpParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateOrganizationSamlIdpParams() *UpdateOrganizationSamlIdpParams {
	return &UpdateOrganizationSamlIdpParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOrganizationSamlIdpParamsWithTimeout creates a new UpdateOrganizationSamlIdpParams object
// with the ability to set a timeout on a request.
func NewUpdateOrganizationSamlIdpParamsWithTimeout(timeout time.Duration) *UpdateOrganizationSamlIdpParams {
	return &UpdateOrganizationSamlIdpParams{
		timeout: timeout,
	}
}

// NewUpdateOrganizationSamlIdpParamsWithContext creates a new UpdateOrganizationSamlIdpParams object
// with the ability to set a context for a request.
func NewUpdateOrganizationSamlIdpParamsWithContext(ctx context.Context) *UpdateOrganizationSamlIdpParams {
	return &UpdateOrganizationSamlIdpParams{
		Context: ctx,
	}
}

// NewUpdateOrganizationSamlIdpParamsWithHTTPClient creates a new UpdateOrganizationSamlIdpParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateOrganizationSamlIdpParamsWithHTTPClient(client *http.Client) *UpdateOrganizationSamlIdpParams {
	return &UpdateOrganizationSamlIdpParams{
		HTTPClient: client,
	}
}

/* UpdateOrganizationSamlIdpParams contains all the parameters to send to the API endpoint
   for the update organization saml idp operation.

   Typically these are written to a http.Request.
*/
type UpdateOrganizationSamlIdpParams struct {

	// IdpID.
	IdpID string

	// OrganizationID.
	OrganizationID string

	// UpdateOrganizationSamlIdp.
	UpdateOrganizationSamlIdp UpdateOrganizationSamlIdpBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update organization saml idp params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOrganizationSamlIdpParams) WithDefaults() *UpdateOrganizationSamlIdpParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update organization saml idp params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateOrganizationSamlIdpParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) WithTimeout(timeout time.Duration) *UpdateOrganizationSamlIdpParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) WithContext(ctx context.Context) *UpdateOrganizationSamlIdpParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) WithHTTPClient(client *http.Client) *UpdateOrganizationSamlIdpParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIdpID adds the idpID to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) WithIdpID(idpID string) *UpdateOrganizationSamlIdpParams {
	o.SetIdpID(idpID)
	return o
}

// SetIdpID adds the idpId to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) SetIdpID(idpID string) {
	o.IdpID = idpID
}

// WithOrganizationID adds the organizationID to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) WithOrganizationID(organizationID string) *UpdateOrganizationSamlIdpParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithUpdateOrganizationSamlIdp adds the updateOrganizationSamlIdp to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) WithUpdateOrganizationSamlIdp(updateOrganizationSamlIdp UpdateOrganizationSamlIdpBody) *UpdateOrganizationSamlIdpParams {
	o.SetUpdateOrganizationSamlIdp(updateOrganizationSamlIdp)
	return o
}

// SetUpdateOrganizationSamlIdp adds the updateOrganizationSamlIdp to the update organization saml idp params
func (o *UpdateOrganizationSamlIdpParams) SetUpdateOrganizationSamlIdp(updateOrganizationSamlIdp UpdateOrganizationSamlIdpBody) {
	o.UpdateOrganizationSamlIdp = updateOrganizationSamlIdp
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOrganizationSamlIdpParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param idpId
	if err := r.SetPathParam("idpId", o.IdpID); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.UpdateOrganizationSamlIdp); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
