// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetOrganizationClientsBandwidthUsageHistoryReader is a Reader for the GetOrganizationClientsBandwidthUsageHistory structure.
type GetOrganizationClientsBandwidthUsageHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationClientsBandwidthUsageHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationClientsBandwidthUsageHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrganizationClientsBandwidthUsageHistoryOK creates a GetOrganizationClientsBandwidthUsageHistoryOK with default headers values
func NewGetOrganizationClientsBandwidthUsageHistoryOK() *GetOrganizationClientsBandwidthUsageHistoryOK {
	return &GetOrganizationClientsBandwidthUsageHistoryOK{}
}

/* GetOrganizationClientsBandwidthUsageHistoryOK describes a response with status code 200, with default header values.

Successful operation
*/
type GetOrganizationClientsBandwidthUsageHistoryOK struct {
	Payload []*GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0
}

func (o *GetOrganizationClientsBandwidthUsageHistoryOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}/clients/bandwidthUsageHistory][%d] getOrganizationClientsBandwidthUsageHistoryOK  %+v", 200, o.Payload)
}
func (o *GetOrganizationClientsBandwidthUsageHistoryOK) GetPayload() []*GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0 {
	return o.Payload
}

func (o *GetOrganizationClientsBandwidthUsageHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0 get organization clients bandwidth usage history o k body items0
swagger:model GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0
*/
type GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0 struct {

	// Downloaded data, in mbps.
	Downstream int64 `json:"downstream,omitempty"`

	// Total bandwidth usage, in mbps.
	Total int64 `json:"total,omitempty"`

	// Timestamp for the bandwidth usage snapshot.
	// Format: date-time
	Ts strfmt.DateTime `json:"ts,omitempty"`

	// Uploaded data, in mbps.
	Upstream int64 `json:"upstream,omitempty"`
}

// Validate validates this get organization clients bandwidth usage history o k body items0
func (o *GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0) validateTs(formats strfmt.Registry) error {
	if swag.IsZero(o.Ts) { // not required
		return nil
	}

	if err := validate.FormatOf("ts", "body", "date-time", o.Ts.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get organization clients bandwidth usage history o k body items0 based on context it is used
func (o *GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetOrganizationClientsBandwidthUsageHistoryOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
