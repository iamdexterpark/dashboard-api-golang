// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateOrganizationBrandingPoliciesPrioritiesReader is a Reader for the UpdateOrganizationBrandingPoliciesPriorities structure.
type UpdateOrganizationBrandingPoliciesPrioritiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrganizationBrandingPoliciesPrioritiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOrganizationBrandingPoliciesPrioritiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateOrganizationBrandingPoliciesPrioritiesOK creates a UpdateOrganizationBrandingPoliciesPrioritiesOK with default headers values
func NewUpdateOrganizationBrandingPoliciesPrioritiesOK() *UpdateOrganizationBrandingPoliciesPrioritiesOK {
	return &UpdateOrganizationBrandingPoliciesPrioritiesOK{}
}

/* UpdateOrganizationBrandingPoliciesPrioritiesOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateOrganizationBrandingPoliciesPrioritiesOK struct {
	Payload interface{}
}

func (o *UpdateOrganizationBrandingPoliciesPrioritiesOK) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationId}/brandingPolicies/priorities][%d] updateOrganizationBrandingPoliciesPrioritiesOK  %+v", 200, o.Payload)
}
func (o *UpdateOrganizationBrandingPoliciesPrioritiesOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateOrganizationBrandingPoliciesPrioritiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateOrganizationBrandingPoliciesPrioritiesBody update organization branding policies priorities body
// Example: {"brandingPolicyIds":["123","456","789"]}
swagger:model UpdateOrganizationBrandingPoliciesPrioritiesBody
*/
type UpdateOrganizationBrandingPoliciesPrioritiesBody struct {

	// A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority).
	// Required: true
	BrandingPolicyIds []string `json:"brandingPolicyIds"`
}

// Validate validates this update organization branding policies priorities body
func (o *UpdateOrganizationBrandingPoliciesPrioritiesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBrandingPolicyIds(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateOrganizationBrandingPoliciesPrioritiesBody) validateBrandingPolicyIds(formats strfmt.Registry) error {

	if err := validate.Required("updateOrganizationBrandingPoliciesPriorities"+"."+"brandingPolicyIds", "body", o.BrandingPolicyIds); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update organization branding policies priorities body based on context it is used
func (o *UpdateOrganizationBrandingPoliciesPrioritiesBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateOrganizationBrandingPoliciesPrioritiesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateOrganizationBrandingPoliciesPrioritiesBody) UnmarshalBinary(b []byte) error {
	var res UpdateOrganizationBrandingPoliciesPrioritiesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
