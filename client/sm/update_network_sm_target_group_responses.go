// Code generated by go-swagger; DO NOT EDIT.

package sm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateNetworkSmTargetGroupReader is a Reader for the UpdateNetworkSmTargetGroup structure.
type UpdateNetworkSmTargetGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkSmTargetGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkSmTargetGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNetworkSmTargetGroupOK creates a UpdateNetworkSmTargetGroupOK with default headers values
func NewUpdateNetworkSmTargetGroupOK() *UpdateNetworkSmTargetGroupOK {
	return &UpdateNetworkSmTargetGroupOK{}
}

/* UpdateNetworkSmTargetGroupOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateNetworkSmTargetGroupOK struct {
	Payload interface{}
}

func (o *UpdateNetworkSmTargetGroupOK) Error() string {
	return fmt.Sprintf("[PUT /networks/{networkId}/sm/targetGroups/{targetGroupId}][%d] updateNetworkSmTargetGroupOK  %+v", 200, o.Payload)
}
func (o *UpdateNetworkSmTargetGroupOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateNetworkSmTargetGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateNetworkSmTargetGroupBody update network sm target group body
// Example: {"name":"My target group","scope":"none","tags":"[]","type":"devices"}
swagger:model UpdateNetworkSmTargetGroupBody
*/
type UpdateNetworkSmTargetGroupBody struct {

	// The name of this target group
	Name string `json:"name,omitempty"`

	// The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.
	Scope string `json:"scope,omitempty"`
}

// Validate validates this update network sm target group body
func (o *UpdateNetworkSmTargetGroupBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update network sm target group body based on context it is used
func (o *UpdateNetworkSmTargetGroupBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateNetworkSmTargetGroupBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateNetworkSmTargetGroupBody) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkSmTargetGroupBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
