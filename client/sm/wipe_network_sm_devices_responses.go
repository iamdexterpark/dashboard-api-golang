// Code generated by go-swagger; DO NOT EDIT.

package sm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WipeNetworkSmDevicesReader is a Reader for the WipeNetworkSmDevices structure.
type WipeNetworkSmDevicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WipeNetworkSmDevicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWipeNetworkSmDevicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewWipeNetworkSmDevicesOK creates a WipeNetworkSmDevicesOK with default headers values
func NewWipeNetworkSmDevicesOK() *WipeNetworkSmDevicesOK {
	return &WipeNetworkSmDevicesOK{}
}

/* WipeNetworkSmDevicesOK describes a response with status code 200, with default header values.

Successful operation
*/
type WipeNetworkSmDevicesOK struct {
	Payload interface{}
}

func (o *WipeNetworkSmDevicesOK) Error() string {
	return fmt.Sprintf("[POST /networks/{networkId}/sm/devices/wipe][%d] wipeNetworkSmDevicesOK  %+v", 200, o.Payload)
}
func (o *WipeNetworkSmDevicesOK) GetPayload() interface{} {
	return o.Payload
}

func (o *WipeNetworkSmDevicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*WipeNetworkSmDevicesBody wipe network sm devices body
// Example: {"id":"1284392014819"}
swagger:model WipeNetworkSmDevicesBody
*/
type WipeNetworkSmDevicesBody struct {

	// The id of the device to be wiped.
	ID string `json:"id,omitempty"`

	// The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.
	Pin int64 `json:"pin,omitempty"`

	// The serial of the device to be wiped.
	Serial string `json:"serial,omitempty"`

	// The wifiMac of the device to be wiped.
	WifiMac string `json:"wifiMac,omitempty"`
}

// Validate validates this wipe network sm devices body
func (o *WipeNetworkSmDevicesBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this wipe network sm devices body based on context it is used
func (o *WipeNetworkSmDevicesBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *WipeNetworkSmDevicesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *WipeNetworkSmDevicesBody) UnmarshalBinary(b []byte) error {
	var res WipeNetworkSmDevicesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
