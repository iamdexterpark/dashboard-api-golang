// Code generated by go-swagger; DO NOT EDIT.

package wireless

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UpdateNetworkWirelessSsidIdentityPskReader is a Reader for the UpdateNetworkWirelessSsidIdentityPsk structure.
type UpdateNetworkWirelessSsidIdentityPskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkWirelessSsidIdentityPskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkWirelessSsidIdentityPskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNetworkWirelessSsidIdentityPskOK creates a UpdateNetworkWirelessSsidIdentityPskOK with default headers values
func NewUpdateNetworkWirelessSsidIdentityPskOK() *UpdateNetworkWirelessSsidIdentityPskOK {
	return &UpdateNetworkWirelessSsidIdentityPskOK{}
}

/* UpdateNetworkWirelessSsidIdentityPskOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateNetworkWirelessSsidIdentityPskOK struct {
	Payload interface{}
}

func (o *UpdateNetworkWirelessSsidIdentityPskOK) Error() string {
	return fmt.Sprintf("[PUT /networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}][%d] updateNetworkWirelessSsidIdentityPskOK  %+v", 200, o.Payload)
}
func (o *UpdateNetworkWirelessSsidIdentityPskOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateNetworkWirelessSsidIdentityPskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateNetworkWirelessSsidIdentityPskBody update network wireless ssid identity psk body
// Example: {"groupPolicyId":"101","id":"1284392014819","name":"Sample Identity PSK","passphrase":"NIalareK"}
swagger:model UpdateNetworkWirelessSsidIdentityPskBody
*/
type UpdateNetworkWirelessSsidIdentityPskBody struct {

	// The group policy to be applied to clients
	GroupPolicyID string `json:"groupPolicyId,omitempty"`

	// The name of the Identity PSK
	Name string `json:"name,omitempty"`

	// The passphrase for client authentication
	Passphrase string `json:"passphrase,omitempty"`
}

// Validate validates this update network wireless ssid identity psk body
func (o *UpdateNetworkWirelessSsidIdentityPskBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update network wireless ssid identity psk body based on context it is used
func (o *UpdateNetworkWirelessSsidIdentityPskBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateNetworkWirelessSsidIdentityPskBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateNetworkWirelessSsidIdentityPskBody) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkWirelessSsidIdentityPskBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
