// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateDeviceLiveToolsPingReader is a Reader for the CreateDeviceLiveToolsPing structure.
type CreateDeviceLiveToolsPingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDeviceLiveToolsPingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDeviceLiveToolsPingCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateDeviceLiveToolsPingCreated creates a CreateDeviceLiveToolsPingCreated with default headers values
func NewCreateDeviceLiveToolsPingCreated() *CreateDeviceLiveToolsPingCreated {
	return &CreateDeviceLiveToolsPingCreated{}
}

/* CreateDeviceLiveToolsPingCreated describes a response with status code 201, with default header values.

Successful operation
*/
type CreateDeviceLiveToolsPingCreated struct {
	Payload interface{}
}

func (o *CreateDeviceLiveToolsPingCreated) Error() string {
	return fmt.Sprintf("[POST /devices/{serial}/liveTools/ping][%d] createDeviceLiveToolsPingCreated  %+v", 201, o.Payload)
}
func (o *CreateDeviceLiveToolsPingCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateDeviceLiveToolsPingCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateDeviceLiveToolsPingBody create device live tools ping body
// Example: {"count":2,"target":"75.75.75.75"}
swagger:model CreateDeviceLiveToolsPingBody
*/
type CreateDeviceLiveToolsPingBody struct {

	// Count parameter to pass to ping. [1..5], default 5
	Count int64 `json:"count,omitempty"`

	// FQDN, IPv4 or IPv6 address
	// Required: true
	Target *string `json:"target"`
}

// Validate validates this create device live tools ping body
func (o *CreateDeviceLiveToolsPingBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateDeviceLiveToolsPingBody) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("createDeviceLiveToolsPing"+"."+"target", "body", o.Target); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create device live tools ping body based on context it is used
func (o *CreateDeviceLiveToolsPingBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateDeviceLiveToolsPingBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateDeviceLiveToolsPingBody) UnmarshalBinary(b []byte) error {
	var res CreateDeviceLiveToolsPingBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
