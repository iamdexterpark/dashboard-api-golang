// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BlinkDeviceLedsReader is a Reader for the BlinkDeviceLeds structure.
type BlinkDeviceLedsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BlinkDeviceLedsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewBlinkDeviceLedsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBlinkDeviceLedsAccepted creates a BlinkDeviceLedsAccepted with default headers values
func NewBlinkDeviceLedsAccepted() *BlinkDeviceLedsAccepted {
	return &BlinkDeviceLedsAccepted{}
}

/* BlinkDeviceLedsAccepted describes a response with status code 202, with default header values.

Successful operation
*/
type BlinkDeviceLedsAccepted struct {
	Payload interface{}
}

func (o *BlinkDeviceLedsAccepted) Error() string {
	return fmt.Sprintf("[POST /devices/{serial}/blinkLeds][%d] blinkDeviceLedsAccepted  %+v", 202, o.Payload)
}
func (o *BlinkDeviceLedsAccepted) GetPayload() interface{} {
	return o.Payload
}

func (o *BlinkDeviceLedsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BlinkDeviceLedsBody blink device leds body
// Example: {"duration":20,"duty":50,"period":160}
swagger:model BlinkDeviceLedsBody
*/
type BlinkDeviceLedsBody struct {

	// The duration in seconds. Must be between 5 and 120. Default is 20 seconds
	Duration int64 `json:"duration,omitempty"`

	// The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
	Duty int64 `json:"duty,omitempty"`

	// The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
	Period int64 `json:"period,omitempty"`
}

// Validate validates this blink device leds body
func (o *BlinkDeviceLedsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this blink device leds body based on context it is used
func (o *BlinkDeviceLedsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BlinkDeviceLedsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BlinkDeviceLedsBody) UnmarshalBinary(b []byte) error {
	var res BlinkDeviceLedsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
