// Code generated by go-swagger; DO NOT EDIT.

package appliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateNetworkApplianceContentFilteringReader is a Reader for the UpdateNetworkApplianceContentFiltering structure.
type UpdateNetworkApplianceContentFilteringReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkApplianceContentFilteringReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkApplianceContentFilteringOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNetworkApplianceContentFilteringOK creates a UpdateNetworkApplianceContentFilteringOK with default headers values
func NewUpdateNetworkApplianceContentFilteringOK() *UpdateNetworkApplianceContentFilteringOK {
	return &UpdateNetworkApplianceContentFilteringOK{}
}

/* UpdateNetworkApplianceContentFilteringOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateNetworkApplianceContentFilteringOK struct {
	Payload interface{}
}

func (o *UpdateNetworkApplianceContentFilteringOK) Error() string {
	return fmt.Sprintf("[PUT /networks/{networkId}/appliance/contentFiltering][%d] updateNetworkApplianceContentFilteringOK  %+v", 200, o.Payload)
}
func (o *UpdateNetworkApplianceContentFilteringOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateNetworkApplianceContentFilteringOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateNetworkApplianceContentFilteringBody update network appliance content filtering body
// Example: {"allowedUrlPatterns":["http://www.example.org","http://help.com.au"],"blockedUrlCategories":["meraki:contentFiltering/category/1","meraki:contentFiltering/category/7"],"blockedUrlPatterns":["http://www.example.com","http://www.betting.com"],"urlCategoryListSize":"topSites"}
swagger:model UpdateNetworkApplianceContentFilteringBody
*/
type UpdateNetworkApplianceContentFilteringBody struct {

	// A list of URL patterns that are allowed
	AllowedURLPatterns []string `json:"allowedUrlPatterns"`

	// A list of URL categories to block
	BlockedURLCategories []string `json:"blockedUrlCategories"`

	// A list of URL patterns that are blocked
	BlockedURLPatterns []string `json:"blockedUrlPatterns"`

	// URL category list size which is either 'topSites' or 'fullList'
	// Enum: [topSites fullList]
	URLCategoryListSize string `json:"urlCategoryListSize,omitempty"`
}

// Validate validates this update network appliance content filtering body
func (o *UpdateNetworkApplianceContentFilteringBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateURLCategoryListSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateNetworkApplianceContentFilteringBodyTypeURLCategoryListSizePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["topSites","fullList"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateNetworkApplianceContentFilteringBodyTypeURLCategoryListSizePropEnum = append(updateNetworkApplianceContentFilteringBodyTypeURLCategoryListSizePropEnum, v)
	}
}

const (

	// UpdateNetworkApplianceContentFilteringBodyURLCategoryListSizeTopSites captures enum value "topSites"
	UpdateNetworkApplianceContentFilteringBodyURLCategoryListSizeTopSites string = "topSites"

	// UpdateNetworkApplianceContentFilteringBodyURLCategoryListSizeFullList captures enum value "fullList"
	UpdateNetworkApplianceContentFilteringBodyURLCategoryListSizeFullList string = "fullList"
)

// prop value enum
func (o *UpdateNetworkApplianceContentFilteringBody) validateURLCategoryListSizeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateNetworkApplianceContentFilteringBodyTypeURLCategoryListSizePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *UpdateNetworkApplianceContentFilteringBody) validateURLCategoryListSize(formats strfmt.Registry) error {
	if swag.IsZero(o.URLCategoryListSize) { // not required
		return nil
	}

	// value enum
	if err := o.validateURLCategoryListSizeEnum("updateNetworkApplianceContentFiltering"+"."+"urlCategoryListSize", "body", o.URLCategoryListSize); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update network appliance content filtering body based on context it is used
func (o *UpdateNetworkApplianceContentFilteringBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateNetworkApplianceContentFilteringBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateNetworkApplianceContentFilteringBody) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkApplianceContentFilteringBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
