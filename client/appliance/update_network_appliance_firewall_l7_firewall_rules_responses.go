// Code generated by go-swagger; DO NOT EDIT.

package appliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateNetworkApplianceFirewallL7FirewallRulesReader is a Reader for the UpdateNetworkApplianceFirewallL7FirewallRules structure.
type UpdateNetworkApplianceFirewallL7FirewallRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetworkApplianceFirewallL7FirewallRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateNetworkApplianceFirewallL7FirewallRulesOK creates a UpdateNetworkApplianceFirewallL7FirewallRulesOK with default headers values
func NewUpdateNetworkApplianceFirewallL7FirewallRulesOK() *UpdateNetworkApplianceFirewallL7FirewallRulesOK {
	return &UpdateNetworkApplianceFirewallL7FirewallRulesOK{}
}

/* UpdateNetworkApplianceFirewallL7FirewallRulesOK describes a response with status code 200, with default header values.

Successful operation
*/
type UpdateNetworkApplianceFirewallL7FirewallRulesOK struct {
	Payload interface{}
}

func (o *UpdateNetworkApplianceFirewallL7FirewallRulesOK) Error() string {
	return fmt.Sprintf("[PUT /networks/{networkId}/appliance/firewall/l7FirewallRules][%d] updateNetworkApplianceFirewallL7FirewallRulesOK  %+v", 200, o.Payload)
}
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateNetworkApplianceFirewallL7FirewallRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateNetworkApplianceFirewallL7FirewallRulesBody update network appliance firewall l7 firewall rules body
// Example: {"rules":[{"policy":"deny","type":"host","value":"google.com"},{"policy":"deny","type":"port","value":"23"},{"policy":"deny","type":"ipRange","value":"10.11.12.00/24"},{"policy":"deny","type":"ipRange","value":"10.11.12.00/24:5555"}]}
swagger:model UpdateNetworkApplianceFirewallL7FirewallRulesBody
*/
type UpdateNetworkApplianceFirewallL7FirewallRulesBody struct {

	// An ordered array of the MX L7 firewall rules
	Rules []*UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0 `json:"rules"`
}

// Validate validates this update network appliance firewall l7 firewall rules body
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateNetworkApplianceFirewallL7FirewallRulesBody) validateRules(formats strfmt.Registry) error {
	if swag.IsZero(o.Rules) { // not required
		return nil
	}

	for i := 0; i < len(o.Rules); i++ {
		if swag.IsZero(o.Rules[i]) { // not required
			continue
		}

		if o.Rules[i] != nil {
			if err := o.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("updateNetworkApplianceFirewallL7FirewallRules" + "." + "rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("updateNetworkApplianceFirewallL7FirewallRules" + "." + "rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this update network appliance firewall l7 firewall rules body based on the context it is used
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRules(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateNetworkApplianceFirewallL7FirewallRulesBody) contextValidateRules(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Rules); i++ {

		if o.Rules[i] != nil {
			if err := o.Rules[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("updateNetworkApplianceFirewallL7FirewallRules" + "." + "rules" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("updateNetworkApplianceFirewallL7FirewallRules" + "." + "rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesBody) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkApplianceFirewallL7FirewallRulesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0 update network appliance firewall l7 firewall rules params body rules items0
swagger:model UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0
*/
type UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0 struct {

	// 'Deny' traffic specified by this rule
	// Enum: [deny]
	Policy string `json:"policy,omitempty"`

	// Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
	// Enum: [application applicationCategory host port ipRange]
	Type string `json:"type,omitempty"`

	// The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.
	Value string `json:"value,omitempty"`
}

// Validate validates this update network appliance firewall l7 firewall rules params body rules items0
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypePolicyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["deny"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypePolicyPropEnum = append(updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypePolicyPropEnum, v)
	}
}

const (

	// UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0PolicyDeny captures enum value "deny"
	UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0PolicyDeny string = "deny"
)

// prop value enum
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) validatePolicyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypePolicyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) validatePolicy(formats strfmt.Registry) error {
	if swag.IsZero(o.Policy) { // not required
		return nil
	}

	// value enum
	if err := o.validatePolicyEnum("policy", "body", o.Policy); err != nil {
		return err
	}

	return nil
}

var updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["application","applicationCategory","host","port","ipRange"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeTypePropEnum = append(updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeTypePropEnum, v)
	}
}

const (

	// UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeApplication captures enum value "application"
	UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeApplication string = "application"

	// UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeApplicationCategory captures enum value "applicationCategory"
	UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeApplicationCategory string = "applicationCategory"

	// UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeHost captures enum value "host"
	UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeHost string = "host"

	// UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypePort captures enum value "port"
	UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypePort string = "port"

	// UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeIPRange captures enum value "ipRange"
	UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeIPRange string = "ipRange"
)

// prop value enum
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) validateType(formats strfmt.Registry) error {
	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update network appliance firewall l7 firewall rules params body rules items0 based on context it is used
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0) UnmarshalBinary(b []byte) error {
	var res UpdateNetworkApplianceFirewallL7FirewallRulesParamsBodyRulesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
