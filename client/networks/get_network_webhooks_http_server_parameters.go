// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetNetworkWebhooksHTTPServerParams creates a new GetNetworkWebhooksHTTPServerParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetNetworkWebhooksHTTPServerParams() *GetNetworkWebhooksHTTPServerParams {
	return &GetNetworkWebhooksHTTPServerParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetNetworkWebhooksHTTPServerParamsWithTimeout creates a new GetNetworkWebhooksHTTPServerParams object
// with the ability to set a timeout on a request.
func NewGetNetworkWebhooksHTTPServerParamsWithTimeout(timeout time.Duration) *GetNetworkWebhooksHTTPServerParams {
	return &GetNetworkWebhooksHTTPServerParams{
		timeout: timeout,
	}
}

// NewGetNetworkWebhooksHTTPServerParamsWithContext creates a new GetNetworkWebhooksHTTPServerParams object
// with the ability to set a context for a request.
func NewGetNetworkWebhooksHTTPServerParamsWithContext(ctx context.Context) *GetNetworkWebhooksHTTPServerParams {
	return &GetNetworkWebhooksHTTPServerParams{
		Context: ctx,
	}
}

// NewGetNetworkWebhooksHTTPServerParamsWithHTTPClient creates a new GetNetworkWebhooksHTTPServerParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetNetworkWebhooksHTTPServerParamsWithHTTPClient(client *http.Client) *GetNetworkWebhooksHTTPServerParams {
	return &GetNetworkWebhooksHTTPServerParams{
		HTTPClient: client,
	}
}

/* GetNetworkWebhooksHTTPServerParams contains all the parameters to send to the API endpoint
   for the get network webhooks Http server operation.

   Typically these are written to a http.Request.
*/
type GetNetworkWebhooksHTTPServerParams struct {

	// HTTPServerID.
	HTTPServerID string

	// NetworkID.
	NetworkID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get network webhooks Http server params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNetworkWebhooksHTTPServerParams) WithDefaults() *GetNetworkWebhooksHTTPServerParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get network webhooks Http server params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetNetworkWebhooksHTTPServerParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) WithTimeout(timeout time.Duration) *GetNetworkWebhooksHTTPServerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) WithContext(ctx context.Context) *GetNetworkWebhooksHTTPServerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) WithHTTPClient(client *http.Client) *GetNetworkWebhooksHTTPServerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHTTPServerID adds the hTTPServerID to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) WithHTTPServerID(hTTPServerID string) *GetNetworkWebhooksHTTPServerParams {
	o.SetHTTPServerID(hTTPServerID)
	return o
}

// SetHTTPServerID adds the httpServerId to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) SetHTTPServerID(hTTPServerID string) {
	o.HTTPServerID = hTTPServerID
}

// WithNetworkID adds the networkID to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) WithNetworkID(networkID string) *GetNetworkWebhooksHTTPServerParams {
	o.SetNetworkID(networkID)
	return o
}

// SetNetworkID adds the networkId to the get network webhooks Http server params
func (o *GetNetworkWebhooksHTTPServerParams) SetNetworkID(networkID string) {
	o.NetworkID = networkID
}

// WriteToRequest writes these params to a swagger request
func (o *GetNetworkWebhooksHTTPServerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param httpServerId
	if err := r.SetPathParam("httpServerId", o.HTTPServerID); err != nil {
		return err
	}

	// path param networkId
	if err := r.SetPathParam("networkId", o.NetworkID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
