// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateNetworkMerakiAuthUserReader is a Reader for the CreateNetworkMerakiAuthUser structure.
type CreateNetworkMerakiAuthUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNetworkMerakiAuthUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateNetworkMerakiAuthUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateNetworkMerakiAuthUserCreated creates a CreateNetworkMerakiAuthUserCreated with default headers values
func NewCreateNetworkMerakiAuthUserCreated() *CreateNetworkMerakiAuthUserCreated {
	return &CreateNetworkMerakiAuthUserCreated{}
}

/* CreateNetworkMerakiAuthUserCreated describes a response with status code 201, with default header values.

Successful operation
*/
type CreateNetworkMerakiAuthUserCreated struct {
	Payload interface{}
}

func (o *CreateNetworkMerakiAuthUserCreated) Error() string {
	return fmt.Sprintf("[POST /networks/{networkId}/merakiAuthUsers][%d] createNetworkMerakiAuthUserCreated  %+v", 201, o.Payload)
}
func (o *CreateNetworkMerakiAuthUserCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateNetworkMerakiAuthUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateNetworkMerakiAuthUserBody create network meraki auth user body
// Example: {"accountType":"802.1X","authorizations":[{"expiresAt":"2018-03-13T00:00:00.090210Z","ssidNumber":1}],"email":"miles@meraki.com","emailPasswordToUser":false,"name":"Miles Meraki","password":"secret"}
swagger:model CreateNetworkMerakiAuthUserBody
*/
type CreateNetworkMerakiAuthUserBody struct {

	// Authorization type for user. Can be 'Guest' or '802.1X' for wireless networks, or 'Client VPN' for wired networks. Defaults to '802.1X'.
	// Enum: [Guest 802.1X Client VPN]
	AccountType *string `json:"accountType,omitempty"`

	// Authorization zones and expiration dates for the user.
	// Required: true
	Authorizations []*CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0 `json:"authorizations"`

	// Email address of the user
	// Required: true
	Email *string `json:"email"`

	// Whether or not Meraki should email the password to user. Default is false.
	EmailPasswordToUser bool `json:"emailPasswordToUser,omitempty"`

	// Name of the user
	// Required: true
	Name *string `json:"name"`

	// The password for this user account
	// Required: true
	Password *string `json:"password"`
}

// Validate validates this create network meraki auth user body
func (o *CreateNetworkMerakiAuthUserBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccountType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAuthorizations(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createNetworkMerakiAuthUserBodyTypeAccountTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Guest","802.1X","Client VPN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createNetworkMerakiAuthUserBodyTypeAccountTypePropEnum = append(createNetworkMerakiAuthUserBodyTypeAccountTypePropEnum, v)
	}
}

const (

	// CreateNetworkMerakiAuthUserBodyAccountTypeGuest captures enum value "Guest"
	CreateNetworkMerakiAuthUserBodyAccountTypeGuest string = "Guest"

	// CreateNetworkMerakiAuthUserBodyAccountTypeNr802Dot1X captures enum value "802.1X"
	CreateNetworkMerakiAuthUserBodyAccountTypeNr802Dot1X string = "802.1X"

	// CreateNetworkMerakiAuthUserBodyAccountTypeClientVPN captures enum value "Client VPN"
	CreateNetworkMerakiAuthUserBodyAccountTypeClientVPN string = "Client VPN"
)

// prop value enum
func (o *CreateNetworkMerakiAuthUserBody) validateAccountTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createNetworkMerakiAuthUserBodyTypeAccountTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateNetworkMerakiAuthUserBody) validateAccountType(formats strfmt.Registry) error {
	if swag.IsZero(o.AccountType) { // not required
		return nil
	}

	// value enum
	if err := o.validateAccountTypeEnum("createNetworkMerakiAuthUser"+"."+"accountType", "body", *o.AccountType); err != nil {
		return err
	}

	return nil
}

func (o *CreateNetworkMerakiAuthUserBody) validateAuthorizations(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkMerakiAuthUser"+"."+"authorizations", "body", o.Authorizations); err != nil {
		return err
	}

	for i := 0; i < len(o.Authorizations); i++ {
		if swag.IsZero(o.Authorizations[i]) { // not required
			continue
		}

		if o.Authorizations[i] != nil {
			if err := o.Authorizations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createNetworkMerakiAuthUser" + "." + "authorizations" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("createNetworkMerakiAuthUser" + "." + "authorizations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *CreateNetworkMerakiAuthUserBody) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkMerakiAuthUser"+"."+"email", "body", o.Email); err != nil {
		return err
	}

	return nil
}

func (o *CreateNetworkMerakiAuthUserBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkMerakiAuthUser"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *CreateNetworkMerakiAuthUserBody) validatePassword(formats strfmt.Registry) error {

	if err := validate.Required("createNetworkMerakiAuthUser"+"."+"password", "body", o.Password); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this create network meraki auth user body based on the context it is used
func (o *CreateNetworkMerakiAuthUserBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAuthorizations(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateNetworkMerakiAuthUserBody) contextValidateAuthorizations(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Authorizations); i++ {

		if o.Authorizations[i] != nil {
			if err := o.Authorizations[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("createNetworkMerakiAuthUser" + "." + "authorizations" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("createNetworkMerakiAuthUser" + "." + "authorizations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkMerakiAuthUserBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkMerakiAuthUserBody) UnmarshalBinary(b []byte) error {
	var res CreateNetworkMerakiAuthUserBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0 create network meraki auth user params body authorizations items0
swagger:model CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0
*/
type CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0 struct {

	// Date for authorization to expire. Set to 'Never' for the authorization to not expire, which is the default.
	ExpiresAt *string `json:"expiresAt,omitempty"`

	// Required for wireless networks. The SSID for which the user is being authorized, which must be configured for the user's given accountType.
	SsidNumber int64 `json:"ssidNumber,omitempty"`
}

// Validate validates this create network meraki auth user params body authorizations items0
func (o *CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this create network meraki auth user params body authorizations items0 based on context it is used
func (o *CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0) UnmarshalBinary(b []byte) error {
	var res CreateNetworkMerakiAuthUserParamsBodyAuthorizationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
