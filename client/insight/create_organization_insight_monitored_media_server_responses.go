// Code generated by go-swagger; DO NOT EDIT.

package insight

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateOrganizationInsightMonitoredMediaServerReader is a Reader for the CreateOrganizationInsightMonitoredMediaServer structure.
type CreateOrganizationInsightMonitoredMediaServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrganizationInsightMonitoredMediaServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOrganizationInsightMonitoredMediaServerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateOrganizationInsightMonitoredMediaServerCreated creates a CreateOrganizationInsightMonitoredMediaServerCreated with default headers values
func NewCreateOrganizationInsightMonitoredMediaServerCreated() *CreateOrganizationInsightMonitoredMediaServerCreated {
	return &CreateOrganizationInsightMonitoredMediaServerCreated{}
}

/* CreateOrganizationInsightMonitoredMediaServerCreated describes a response with status code 201, with default header values.

Successful operation
*/
type CreateOrganizationInsightMonitoredMediaServerCreated struct {
	Payload interface{}
}

func (o *CreateOrganizationInsightMonitoredMediaServerCreated) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationId}/insight/monitoredMediaServers][%d] createOrganizationInsightMonitoredMediaServerCreated  %+v", 201, o.Payload)
}
func (o *CreateOrganizationInsightMonitoredMediaServerCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *CreateOrganizationInsightMonitoredMediaServerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateOrganizationInsightMonitoredMediaServerBody create organization insight monitored media server body
// Example: {"address":"123.123.123.1","bestEffortMonitoringEnabled":true,"name":"Sample VoIP Provider"}
swagger:model CreateOrganizationInsightMonitoredMediaServerBody
*/
type CreateOrganizationInsightMonitoredMediaServerBody struct {

	// The IP address (IPv4 only) or hostname of the media server to monitor
	// Required: true
	Address *string `json:"address"`

	// Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead.
	BestEffortMonitoringEnabled bool `json:"bestEffortMonitoringEnabled,omitempty"`

	// The name of the VoIP provider
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this create organization insight monitored media server body
func (o *CreateOrganizationInsightMonitoredMediaServerBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateOrganizationInsightMonitoredMediaServerBody) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("createOrganizationInsightMonitoredMediaServer"+"."+"address", "body", o.Address); err != nil {
		return err
	}

	return nil
}

func (o *CreateOrganizationInsightMonitoredMediaServerBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("createOrganizationInsightMonitoredMediaServer"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create organization insight monitored media server body based on context it is used
func (o *CreateOrganizationInsightMonitoredMediaServerBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CreateOrganizationInsightMonitoredMediaServerBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateOrganizationInsightMonitoredMediaServerBody) UnmarshalBinary(b []byte) error {
	var res CreateOrganizationInsightMonitoredMediaServerBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
